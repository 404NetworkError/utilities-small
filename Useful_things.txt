|--------------|
|  Makefiles:  |
|--------------|
**START**
# This will output the help for each task
# Thanks to https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
.PHONY: help

help: ## This help
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

.DEFAULT_GOAL := help
**END**



|----------------|
|  Bash scripts  |
|----------------|
**START**
#!/usr/bin/env bash

trap ctrl_c SIGINT

ctrl_c () {
    echo "" # For newline
    exit
}

readonly BOLD=$(tput bold)
readonly NORM=$(tput sgr0)

readonly BLACK='\x1B[0;30m'
readonly RED='\x1B[0;31m'
readonly GREEN='\x1B[0;32m'
readonly ORANGE='\x1B[0;33m'
readonly BLUE='\x1B[0;34m'
readonly PURPLE='\x1B[0;35m'
readonly CYAN='\x1B[0;36m'
readonly LIGHTGREY='\x1B[0;37m'
readonly NC='\x1B[0m' # No Color

# High intensity yellow
readonly HIYELLOW='\x1B[0;93m'
readonly BHIYELLOW='\x1B[1;93m'
**END**

**START**
ARGS=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
    echo "Help: ..."
    shift # past argument
    ;;

    -o|--opt|--option|--options)
    list="$2"
    shift # past argument
    shift # past value
    ;;
esac
done
set -- "${ARGS[@]}" # restore positional parameters
**END**
